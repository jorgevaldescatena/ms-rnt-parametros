stages:
  - sonarqube-check
  - sonarqube-vulnerability-report          # List of stages for jobs, and their order of execution
  - build
  - deploy

sonarqube-check:
  stage: sonarqube-check
  image: maven:3-eclipse-temurin-17
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script: 
    - mvn verify sonar:sonar
  allow_failure: true
  only:
    - develop
    - release
    - staging
    - main
  
sonarqube-vulnerability-report:
  stage: sonarqube-vulnerability-report
  script:
    - 'curl -u "${SONAR_TOKEN}:" "${SONAR_HOST_URL}/api/issues/gitlab_sast_export?projectKey=rnt-parametros&branch=${CI_COMMIT_BRANCH}&pullRequest=${CI_MERGE_REQUEST_IID}" -o gl-sast-sonar-report.json'
  allow_failure: true
  only:
    - develop
    - release
    - staging
    - main
  artifacts:
    expire_in: 1 day
    reports:
      sast: gl-sast-sonar-report.json
  dependencies:
    - sonarqube-check

build-docker-image:
  stage: build
  image: docker
  services: 
    - docker:dind
  script: 
    - docker build . -t rnt-api/rnt-parametros:$CI_COMMIT_BRANCH
    - docker tag rnt-api/rnt-parametros:$CI_COMMIT_BRANCH docker-registry.mtt.cl:5000/rnt-api/rnt-parametros:$CI_COMMIT_BRANCH
    - docker push docker-registry.mtt.cl:5000/rnt-api/rnt-parametros:$CI_COMMIT_BRANCH
  only:
    - develop
    - release
    - staging
    - main
  
deploy-dev:      # This job runs in the deploy stage.
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
  image: 
    name: docker-registry.mtt.cl:5000/mtt/kubectl:1.23
    entrypoint: [""]
  dependencies:
    - build-docker-image
  script:
    - kubectl --kubeconfig /config rollout restart deployment rnt-api-parametros-dev -n rnt-api
  only:
    - develop
  environment:
    name: develop
    url: http://rnt-api-parametros-dev.k8s.mtt.cl/swagger-ui/index.html?configUrl=/v3/api-docs/swagger-config#/

deploy-qa:      # This job runs in the deploy stage.
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
  image: 
    name: docker-registry.mtt.cl:5000/mtt/kubectl:1.23
    entrypoint: [""]
  dependencies:
    - build-docker-image
  script:
    - kubectl --kubeconfig /config rollout restart deployment rnt-api-parametros-qa -n rnt-api
  only:
    - release
  environment:
    name: release
    url: http://rnt-api-parametros-qa.k8s.mtt.cl/swagger-ui/index.html?configUrl=/v3/api-docs/swagger-config#/

deploy-staging:      
  stage: deploy
  image: 
    name: docker-registry.mtt.cl:5000/mtt/kubectl:1.23
    entrypoint: [""]
  dependencies:
    - build-docker-image
  script:
    - kubectl --kubeconfig /config rollout restart deployment rnt-api-parametros-staging -n rnt-api
  only:
    - staging
  environment:
    name: staging
    url: http://rnt-api-parametros-staging.k8s.mtt.cl/swagger-ui/index.html?configUrl=/v3/api-docs/swagger-config#/

deploy-prd:
  stage: deploy
  image: 
    name: docker-registry.mtt.cl:5000/mtt/kubectl:1.23
    entrypoint: [""]
  dependencies:
    - build-docker-image
  script:
    - kubectl --kubeconfig /config rollout restart deployment rnt-api-parametros-prd -n rnt-api
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
      when: manual
  environment:
    name: production
    url: http://rnt-api-parametros-prd.k8s.mtt.cl/swagger-ui/index.html?configUrl=/v3/api-docs/swagger-config#/